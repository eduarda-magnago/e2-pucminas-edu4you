// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using edu_for_you.Models;

#nullable disable

namespace edu_for_you.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("edu_for_you.Models.AvaliacaoCurso", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("data_avaliacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_curso")
                        .HasColumnType("int");

                    b.Property<int>("id_usuario")
                        .HasColumnType("int");

                    b.Property<double>("nota")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("id_curso");

                    b.HasIndex("id_usuario");

                    b.ToTable("AvaliacaoCurso");
                });

            modelBuilder.Entity("edu_for_you.Models.AvaliacaoProfessor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("data_avaliacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_professor")
                        .HasColumnType("int");

                    b.Property<int>("id_usuario")
                        .HasColumnType("int");

                    b.Property<double>("nota")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("id_professor");

                    b.HasIndex("id_usuario");

                    b.ToTable("AvaliacaoProfessor");
                });

            modelBuilder.Entity("edu_for_you.Models.Conteudo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("data_atualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("data_criacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_curso")
                        .HasColumnType("int");

                    b.Property<string>("licao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("video_curso")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("id_curso");

                    b.ToTable("Conteudo");
                });

            modelBuilder.Entity("edu_for_you.Models.Curso", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("capa_curso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("carga_horaria")
                        .HasColumnType("int");

                    b.Property<int>("categoria")
                        .HasColumnType("int");

                    b.Property<DateTime>("data_criacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_professor")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("id_professor");

                    b.ToTable("Curso");
                });

            modelBuilder.Entity("edu_for_you.Models.Forum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_curso")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("id_curso")
                        .IsUnique();

                    b.ToTable("Foruns");
                });

            modelBuilder.Entity("edu_for_you.Models.Matricula", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("data_matricula")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_curso")
                        .HasColumnType("int");

                    b.Property<int>("id_usuario")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("id_curso");

                    b.HasIndex("id_usuario");

                    b.ToTable("Matricula");
                });

            modelBuilder.Entity("edu_for_you.Models.PerfilProfessor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("areaAtuacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("avaliacao_media")
                        .HasColumnType("float");

                    b.Property<string>("biografia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email_contato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("experiencia_profissional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("formacao_academica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("habilidades")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_usuario")
                        .HasColumnType("int");

                    b.Property<string>("idiomas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("linkedin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefone_contato")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("id_usuario");

                    b.ToTable("PerfilProfessor");
                });

            modelBuilder.Entity("edu_for_you.Models.Postagem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("conteudo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("data_atualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("data_criacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_curso")
                        .HasColumnType("int");

                    b.Property<int>("id_usuario")
                        .HasColumnType("int");

                    b.Property<int?>("postagem_pai_id")
                        .HasColumnType("int");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("id_curso");

                    b.HasIndex("id_usuario");

                    b.HasIndex("postagem_pai_id");

                    b.ToTable("Postagem");
                });

            modelBuilder.Entity("edu_for_you.Models.Topico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Autor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Conteudo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_forum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("id_forum");

                    b.ToTable("Topicos");
                });

            modelBuilder.Entity("edu_for_you.Models.Usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("areaInteresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("foto_perfil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("genero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nivelEnsino")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sobrenome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("edu_for_you.Models.AvaliacaoCurso", b =>
                {
                    b.HasOne("edu_for_you.Models.Curso", "Curso")
                        .WithMany()
                        .HasForeignKey("id_curso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("edu_for_you.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("edu_for_you.Models.AvaliacaoProfessor", b =>
                {
                    b.HasOne("edu_for_you.Models.PerfilProfessor", "PerfilProfessor")
                        .WithMany()
                        .HasForeignKey("id_professor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("edu_for_you.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PerfilProfessor");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("edu_for_you.Models.Conteudo", b =>
                {
                    b.HasOne("edu_for_you.Models.Curso", "Curso")
                        .WithMany()
                        .HasForeignKey("id_curso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("edu_for_you.Models.Curso", b =>
                {
                    b.HasOne("edu_for_you.Models.PerfilProfessor", "PerfilProfessor")
                        .WithMany()
                        .HasForeignKey("id_professor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PerfilProfessor");
                });

            modelBuilder.Entity("edu_for_you.Models.Forum", b =>
                {
                    b.HasOne("edu_for_you.Models.Curso", "Curso")
                        .WithOne("Forum")
                        .HasForeignKey("edu_for_you.Models.Forum", "id_curso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("edu_for_you.Models.Matricula", b =>
                {
                    b.HasOne("edu_for_you.Models.Curso", "Curso")
                        .WithMany()
                        .HasForeignKey("id_curso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("edu_for_you.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("edu_for_you.Models.PerfilProfessor", b =>
                {
                    b.HasOne("edu_for_you.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("edu_for_you.Models.Postagem", b =>
                {
                    b.HasOne("edu_for_you.Models.Curso", "Curso")
                        .WithMany()
                        .HasForeignKey("id_curso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("edu_for_you.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("edu_for_you.Models.Postagem", "PostagemPai")
                        .WithMany()
                        .HasForeignKey("postagem_pai_id");

                    b.Navigation("Curso");

                    b.Navigation("PostagemPai");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("edu_for_you.Models.Topico", b =>
                {
                    b.HasOne("edu_for_you.Models.Forum", "Forum")
                        .WithMany("Topicos")
                        .HasForeignKey("id_forum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forum");
                });

            modelBuilder.Entity("edu_for_you.Models.Curso", b =>
                {
                    b.Navigation("Forum");
                });

            modelBuilder.Entity("edu_for_you.Models.Forum", b =>
                {
                    b.Navigation("Topicos");
                });
#pragma warning restore 612, 618
        }
    }
}
